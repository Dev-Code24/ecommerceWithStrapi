[{"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/index.js":"1","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/App.js":"2","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/theme.js":"3","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/state/index.js":"4","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/checkout/Checkout.jsx":"5","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/global/Navbar.jsx":"6","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/itemDetails/itemDetails.jsx":"7","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/global/CartMenu.jsx":"8","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/checkout/Confirmation.jsx":"9","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/home/Home.jsx":"10","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/home/MainCarousel.jsx":"11","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/components/Item.jsx":"12","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/home/ShoppingList.jsx":"13","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/home/Subscribe.jsx":"14","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/global/Footer.jsx":"15","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/checkout/Shipping.jsx":"16","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/checkout/AddressForm.jsx":"17","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/checkout/Payment.jsx":"18"},{"size":714,"mtime":1674656455108,"results":"19","hashOfConfig":"20"},{"size":1113,"mtime":1677867235231,"results":"21","hashOfConfig":"20"},{"size":1429,"mtime":1674310172875,"results":"22","hashOfConfig":"20"},{"size":1269,"mtime":1674804732885,"results":"23","hashOfConfig":"20"},{"size":6480,"mtime":1677859012852,"results":"24","hashOfConfig":"20"},{"size":2198,"mtime":1674716584172,"results":"25","hashOfConfig":"20"},{"size":4833,"mtime":1677696227362,"results":"26","hashOfConfig":"20"},{"size":4940,"mtime":1677314435751,"results":"27","hashOfConfig":"20"},{"size":469,"mtime":1677867102414,"results":"28","hashOfConfig":"20"},{"size":289,"mtime":1677436120212,"results":"29","hashOfConfig":"20"},{"size":2977,"mtime":1677339747653,"results":"30","hashOfConfig":"20"},{"size":2741,"mtime":1677435922872,"results":"31","hashOfConfig":"20"},{"size":2836,"mtime":1677435773506,"results":"32","hashOfConfig":"20"},{"size":1251,"mtime":1677437231226,"results":"33","hashOfConfig":"20"},{"size":2396,"mtime":1677484916753,"results":"34","hashOfConfig":"20"},{"size":1761,"mtime":1677857600220,"results":"35","hashOfConfig":"20"},{"size":3647,"mtime":1677855541461,"results":"36","hashOfConfig":"20"},{"size":1188,"mtime":1677858666307,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bbnqw3",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/index.js",[],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/App.js",[],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/theme.js",[],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/state/index.js",["95","96"],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/checkout/Checkout.jsx",[],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/global/Navbar.jsx",[],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/itemDetails/itemDetails.jsx",[],["97"],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/global/CartMenu.jsx",["98"],[],"import {\n  Box,\n  Button,\n  Divider,\n  Icon,\n  IconButton,\n  Typography,\n} from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport styled from '@emotion/styled';\nimport { shades } from '../../theme';\nimport {\n  decreaseCount,\n  increaseCount,\n  removeFromCart,\n  setIsCartOpen,\n} from '../../state';\nimport { useNavigate } from 'react-router-dom';\n\nconst FlexBox = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst CartMenu = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart.cart);\n  const isCartOpen = useSelector((state) => state.cart.isCartOpen);\n\n  const totalPrice = cart.reduce((total, item) => {\n    return total + item.count * item.attributes.price;\n  }, 0);\n\n  return (\n    <Box //overlay\n      display={isCartOpen ? 'block' : 'none'}\n      backgroundColor=\"rgba(0,0,0,0.4)\"\n      position=\"fixed\"\n      zIndex={10}\n      width=\"100%\"\n      height=\"100%\"\n      left=\"0\"\n      top=\"0\"\n      overflow=\"auto\"\n    >\n      {/* MODAL  */}\n      <Box\n        position=\"fixed\"\n        right=\"0\"\n        bottom=\"0\"\n        width=\"max(400px,30%)\"\n        height=\"100%\"\n        backgroundColor=\"white\"\n      >\n        <Box padding=\"30px\" overflow=\"auto\" height=\"100%\">\n          {/* HEADER  */}\n          <FlexBox mb=\"15px\">\n            <Typography variant=\"h3\">SHOPPING BAG ({cart.length})</Typography>\n            <IconButton onClick={() => dispatch(setIsCartOpen({}))}>\n              <CloseIcon />\n            </IconButton>\n          </FlexBox>\n          {/* CART LIST  */}\n          <Box>\n            {cart.map((item) => (\n              <Box key={`${item.attributes.name} -${item.id}`}>\n                <FlexBox p=\"15px 0\">\n                  <Box flex=\"1 1 40%\">\n                    <img\n                      alt={item?.name}\n                      width=\"123px\"\n                      height=\"164px\"\n                      src={`http://localhost:1337${item?.attributes?.image?.data?.attributes?.formats?.medium?.url}`}\n                    />\n                  </Box>\n                  <Box flex=\"1 1 60%\">\n                    {/* ITEM NAME  */}\n                    <FlexBox mb=\"5px\">\n                      <Typography fontWeight=\"bold\">\n                        {item.attributes.name}\n                      </Typography>\n                      <IconButton\n                        onClick={() =>\n                          dispatch(removeFromCart({ id: item.id }))\n                        }\n                      >\n                        <CloseIcon />\n                      </IconButton>\n                    </FlexBox>\n                    <Typography>{item.attributes.shortDescription}</Typography>\n                    {/* AMOUNT  */}\n                    <FlexBox m=\"15px 0\">\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        border={`1.5px solid ${shades.neutral[500]}`}\n                      >\n                        <IconButton\n                          onClick={() =>\n                            dispatch(decreaseCount({ id: item.id }))\n                          }\n                        >\n                          <RemoveIcon />\n                        </IconButton>\n                        <Typography>{item.count}</Typography>\n                        <IconButton\n                          onClick={() =>\n                            dispatch(increaseCount({ id: item.id }))\n                          }\n                        >\n                          <AddIcon />\n                        </IconButton>\n                      </Box>\n                      {/* PRICE  */}\n                      <Typography fontWeight=\"bold\">\n                        ${item.attributes.price}\n                      </Typography>\n                    </FlexBox>\n                  </Box>\n                </FlexBox>\n                <Divider />\n              </Box>\n            ))}\n          </Box>\n\n          {/* ACTIONS  */}\n          <Box m=\"20px 0\">\n            <FlexBox m=\"20px 0\">\n              <Typography fontWeight=\"bold\">SUBTOTAl</Typography>\n              <Typography fontWeight=\"bold\">${totalPrice}</Typography>\n            </FlexBox>\n            <Button\n              sx={{\n                backgroundColor: shades.primary[400],\n                color: 'white',\n                minWidth: '100%',\n                padding: '20px 40px',\n                m: '20px 0',\n              }}\n              onClick={() => {\n                navigate('/checkout');\n                dispatch(setIsCartOpen({}));\n              }}\n            >\n              CHECKOUT\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CartMenu;\n","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/checkout/Confirmation.jsx",[],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/home/Home.jsx",[],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/home/MainCarousel.jsx",["99"],[],"import {\n  Box,\n  Typography,\n  IconButton,\n  useMediaQuery,\n  Icon,\n} from '@mui/material';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport { shades } from '../../theme';\n\n// imports all items from the assets folder\n\nconst importAll = (r) =>\n  r.keys().reduce((acc, item) => {\n    acc[item.replace('./', '')] = r(item);\n    return acc;\n  }, {});\n\nconst heroTextureImports = importAll(\n  require.context('../../assets', false, /\\.(png|jpe?g|svg)$/)\n);\n\nconst MainCarousel = () => {\n  const isNonMobile = useMediaQuery('(min-width:600px)');\n\n  return (\n    <Carousel\n      infiniteLoop={true}\n      showThumbs={false}\n      showIndicators={true}\n      showStatus={false}\n      renderArrowPrev={(onClickHandler, hasPrev, label) => (\n        <IconButton\n          onClick={onClickHandler}\n          sx={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"0\",\n            color: \"white\",\n            padding: \"5px\",\n            zIndex: \"10\",\n          }}\n        >\n          <NavigateBeforeIcon sx={{ fontSize: 40 }} />\n        </IconButton>\n      )}\n      renderArrowNext={(onClickHandler, hasNext, label) => (\n        <IconButton\n          onClick={onClickHandler}\n          sx={{\n            position: \"absolute\",\n            top: \"50%\",\n            right: \"0\",\n            color: \"white\",\n            padding: \"5px\",\n            zIndex: \"10\",\n          }}\n        >\n          <NavigateNextIcon sx={{ fontSize: 40 }} />\n        </IconButton>\n      )}\n    >\n      {Object.values(heroTextureImports).map((texture, index) => (\n        <Box key={`carousel-image-${index}`}>\n          <img\n            alt={`carousel-${index}`}\n            src={texture}\n            style={{\n              width: '100%',\n              height: '700px',\n              objectFit: 'cover',\n              backgroundAttachment: 'fixed',\n            }}\n          />\n          <Box\n            color=\"white\"\n            padding=\"20px\"\n            borderRadius=\"1px\"\n            textAlign=\"left\"\n            backgroundColor=\"rgb(0,0,0,0.4)\"\n            position=\"absolute\"\n            top=\"46%\"\n            left={isNonMobile ? '10%' : '0'}\n            right={isNonMobile ? undefined : '0'}\n            margin={isNonMobile ? undefined : '0 auto'}\n            maxWidth={isNonMobile ? undefined : '240px'}\n          >\n            <Typography color={shades.secondary[200]}>-- NEW ITEMS</Typography>\n            <Typography variant=\"h1\">Summer Sale</Typography>\n            <Typography\n              fontWeight=\"bold\"\n              color={shades.secondary[300]}\n              sx={{ textDecoration: 'underline' }}\n            >\n              Discover More\n            </Typography>\n          </Box>\n        </Box>\n      ))}\n    </Carousel>\n  );\n};\nexport default MainCarousel;\n","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/components/Item.jsx",[],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/home/ShoppingList.jsx",["100"],[],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Typography, Tab, Tabs, useMediaQuery } from '@mui/material';\nimport Item from '../../components/Item';\nimport { setItems } from '../../state';\n\nconst ShoppingList = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('all');\n  const items = useSelector((state) => state.cart.items);\n  const isNonMobile = useMediaQuery('(min-width:600px)');\n  console.log(`items`, items);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  async function getItems() {\n    const items = await fetch(\n      'http://localhost:1337/api/items?populate=image',\n      { method: 'GET' }\n    );\n    const itemsJson = await items.json();\n    dispatch(setItems(itemsJson.data));\n  }\n\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  const topRatedItems = items.filter(\n    (item) => item.attributes.category === 'topRated'\n  );\n  const newArrivalsItems = items.filter(\n    (item) => item.attributes.category === 'newArrivals'\n  );\n  const bestSellersItems = items.filter(\n    (item) => item.attributes.category === 'bestSellers'\n  );\n  return (\n    <Box width=\"80%\" margin=\"80px auto\">\n      <Typography variant=\"h3\" textAlign=\"center\">\n        Our Featured <b>Products</b>\n      </Typography>\n      <Tabs\n        textColor=\"primary\"\n        indicatorColor=\"primary\"\n        value={value}\n        onChange={handleChange}\n        centered\n        TabIndicatorProps={{ sx: { display: isNonMobile ? 'block' : 'none' } }}\n        sx={{\n          m: '25px',\n          '& .MuiTabs-flexContainer': {\n            flexWrap: 'wrap',\n          },\n        }}\n      >\n        <Tab label=\"ALL\" value=\"all\"></Tab>\n        <Tab label=\"BEST SELLERS\" value=\"bestSellers\"></Tab>\n        <Tab label=\"NEW ARRIVALS\" value=\"newArrivals\"></Tab>\n        <Tab label=\"TOP RATED\" value=\"topRated\"></Tab>\n      </Tabs>\n      <Box\n        margin=\"0 auto\"\n        display=\"grid\"\n        gridTemplateColumns=\"repeat(auto-fill,300px)\"\n        justifyContent=\"space-around\"\n        rowGap=\"20px\"\n        columnGap=\"1.33%\"\n      >\n        {value === 'all' &&\n          items.map((item) => [\n            <Item item={item} key={`${item.name}-${item.id}`}></Item>,\n          ])}\n        {value === 'newArrivals' &&\n          newArrivalsItems.map((item) => [\n            <Item item={item} key={`${item.name}-${item.id}`}></Item>,\n          ])}\n        {value === 'topRated' &&\n          topRatedItems.map((item) => [\n            <Item item={item} key={`${item.name}-${item.id}`}></Item>,\n          ])}\n        {value === 'bestSellers' &&\n          bestSellersItems.map((item) => [\n            <Item item={item} key={`${item.name}-${item.id}`}></Item>,\n          ])}\n      </Box>\n    </Box>\n  );\n};\nexport default ShoppingList;\n","/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/home/Subscribe.jsx",[],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/global/Footer.jsx",[],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/checkout/Shipping.jsx",[],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/checkout/AddressForm.jsx",[],[],"/Users/dev_code/Desktop/open-projects/React-Projects/E-Commerce/client/src/scenes/checkout/Payment.jsx",[],[],{"ruleId":"101","severity":1,"message":"102","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":22},{"ruleId":"101","severity":1,"message":"105","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":51,"column":6,"nodeType":"108","endLine":51,"endColumn":14,"suggestions":"109","suppressions":"110"},{"ruleId":"101","severity":1,"message":"111","line":5,"column":3,"nodeType":"103","messageId":"104","endLine":5,"endColumn":7},{"ruleId":"101","severity":1,"message":"111","line":6,"column":3,"nodeType":"103","messageId":"104","endLine":6,"endColumn":7},{"ruleId":"106","severity":1,"message":"112","line":28,"column":6,"nodeType":"108","endLine":28,"endColumn":8,"suggestions":"113"},"no-unused-vars","'SatelliteAlt' is defined but never used.","Identifier","unusedVar","'create' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getItem'. Either include it or remove the dependency array.","ArrayExpression",["114"],["115"],"'Icon' is defined but never used.","React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.",["116"],{"desc":"117","fix":"118"},{"kind":"119","justification":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [getItem, itemId]",{"range":"123","text":"124"},"directive","","Update the dependencies array to be: [getItems]",{"range":"125","text":"126"},[1477,1485],"[getItem, itemId]",[873,875],"[getItems]"]